name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on:
  workflow_dispatch:
  pull_request:
  #push:
   # branches:
    #  - test_wheel
  #tags:
   #   - 'v*
  release:
    types:
      - published
      
  
jobs:
  build_wheels_windows_64:
    name: Build wheels on ${{ matrix.os }} 64-bit 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_SKIP: "*-win32"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl   
  
  build_wheels_windows_32:
    name: Build wheels on ${{ matrix.os }} 32-bit
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_BUILD: "*-win32"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl       
  build_wheels_macos_linux:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest,ubuntu-latest]
        #os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
         CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
         #CIBW_SKIP: "*-musllinux_* pp*"
         CIBW_SKIP: "*-*linux_{aarch64,ppc64le}"
         CIBW_REPAIR_WHEEL_COMMAND_LINUX:
            auditwheel repair
              --exclude libdb2.so.1
              --exclude libDB2xml4c.so.58 
              --exclude libm.so.6
              --exclude libcrypt.so.1
              --exclude libpam.so.0
              --exclude librt.so.1
              --exclude libpthread.so.0
              --exclude libc.so.6
              --exclude libdl.so.2
              --wheel-dir {dest_dir}
              {wheel}
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        #env:
         # CIBW_ENVIRONMENT:: PATH="$PATH:/usr/lib/python3/dist-packages/clidriver/bin:/usr/lib/python3/dist-packages/ibm_db-3.1.4.3-py3.1-linux-x86_64.egg/clidriver/bin"
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip build
      - name: Build sdist
        #env:
          #CIBW_ENVIRONMENT:: PATH="$PATH:/usr/lib/python3/dist-packages/clidriver/bin:/usr/lib/python3/dist-packages/ibm_db-3.1.4.3-py3.1-linux-x86_64.egg/clidriver/bin"
        run: |
          python -m build --sdist --no-isolation
          ls
      - name: run cd dist and ls 
        run: |
         cd dist
         ls 
        
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          path: |
            ./dist/*.tar.gz
