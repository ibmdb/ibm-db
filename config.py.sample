test_dir    =    'ibm_db_tests'        # Location of testsuite file (relative to current directory) (Don't change this.)

import sys, os, platform
import warnings
if sys.platform != 'zos':
    env_not_set = False
    if 'DB2_USER' in os.environ:
        user = os.getenv('DB2_USER')
    else:
        warnings.warn("Warning: Environment variable DB2_USER is not set.")
        env_not_set = True
    if 'DB2_PASSWD' in os.environ:
        password = os.getenv('DB2_PASSWD')
    else:
        warnings.warn("Warning: Environment variable DB2_PASSWD is not set.")
        env_not_set = True
    if 'DB2_HOST' in os.environ:
        hostname = os.getenv('DB2_HOST')
    else:
        warnings.warn("Warning: Environment variable DB2_HOST is not set.")
        env_not_set = True
    if 'DB2_PORT' in os.environ:
        port = os.getenv('DB2_PORT')
    else:
        warnings.warn("Warning: Environment variable DB2_PORT is not set.")
        env_not_set = True
    if 'DB2_DATABASE' in os.environ:
        database = os.getenv('DB2_DATABASE')
    else:
        warnings.warn("Warning: Environment variable DB2_DATABASE is not set.")
        env_not_set = True

    if env_not_set == True:
        print("Please set it before running test file and avoid")
        print("hardcoded password in config.py file." )
        exit
else:
    database = "DSN=%s%s" % (platform.node(), os.getenv("SUBSYSTEM"))
    user	=	os.getenv('USER')	# User ID to connect with
    try:
        with open("%s/.password" % os.getenv('HOME'), "r") as pwd:
            password=	pwd.read().rstrip()	# Password for given User ID
    except Exception:
        if os.getenv("DSNAOINI").endswith("RRSAF"):
            print("If you use RRSAF, please create the file ~/.password, and tag it, and run: chmod 600 ~/.password")
            print("Also, consider deleting ~/.password after testing is completed.")
        else:
            user     = None
            password = None
    hostname	=	None   #'localhost'	# Hostname
    port	=	None   #50000		# Port Number

auth_user   =    'auth_user'    # Authentic user of Database
auth_pass   =    'auth_pass'    # Password for Authentic user
tc_user     =    'tc_user'    # Trusted user
tc_pass     =    'tc_pass'    # Password to trusted user
